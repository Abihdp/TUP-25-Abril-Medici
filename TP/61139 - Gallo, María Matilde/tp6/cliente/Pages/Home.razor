@page "/"
@using cliente.Services
@using cliente.Modelos
@inject ApiService ApiService

<PageTitle>Inicio</PageTitle>

<div class="container">
    <div class="row mb-4">
        <div class="col-12">
            <h1>Comunicación Cliente-Servidor</h1>
        </div>
    </div>
    
    <!-- Sección para obtener datos simples -->
    <div class="row mb-4">
        <div class="col-12">
            <button class="btn btn-primary" @onclick="ObtenerDatosDelServidor">Obtener datos del servidor</button>
        </div>
    </div>

    <div class="row mb-4">
        <div class="col-12">            
            @if (cargandoDatos) {
                <div class="alert alert-info">Cargando datos...</div>
            } else if (datos != null) {
                <div class="card" style="width: 300px;">
                    <div class="card-header">
                        Respuesta del servidor
                    </div>
                    <div class="card-body">
                        <h5 class="card-title">@datos.Mensaje</h5>
                        <p class="card-text">Fecha: @datos.Fecha.ToString("dd/MM/yyyy HH:mm:ss")</p>
                    </div>
                </div>
            } else if (errorDatos != null) {
                <div class="alert alert-danger">
                    Error: @errorDatos
                </div>
            }
        </div>
    </div>

    <!-- Nueva sección para productos -->
    <div class="row mb-4">
        <div class="col-12">
            <button class="btn btn-success" @onclick="ObtenerProductos">Cargar Productos</button>
        </div>
    </div>

    <div class="row">
        <div class="col-12">
            @if (cargandoProductos) {
                <div class="alert alert-info">Cargando productos...</div>
            } else if (productos?.Count > 0) {
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>Id</th>
                            <th>Nombre</th>
                            <th>Precio</th>
                            <th>Descripción</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var producto in productos)
                        {
                            <tr>
                                <td>@producto.Id</td>
                                <td>@producto.Nombre</td>
                                <td>@producto.Precio.ToString("C")</td>
                                <td>@producto.Descripcion</td>
                            </tr>
                        }
                    </tbody>
                </table>
            } else if (errorProductos != null) {
                <div class="alert alert-danger">
                    Error: @errorProductos
                </div>
            } else {
                <div>No hay productos cargados.</div>
            }
        </div>
    </div>
</div>

@code {
    // Para datos simples
    private DatosRespuesta datos;
    private string errorDatos;
    private bool cargandoDatos = false;

    // Para productos
    private List<Producto> productos;
    private string errorProductos;
    private bool cargandoProductos = false;

    private async Task ObtenerDatosDelServidor() {
        try {
            cargandoDatos = true;
            errorDatos = null;
            datos = await ApiService.ObtenerDatosAsync();
        } catch (Exception ex) {
            errorDatos = ex.Message;
            datos = null;
        } finally {
            cargandoDatos = false;
        }
    }

    private async Task ObtenerProductos() {
        try {
            cargandoProductos = true;
            errorProductos = null;
            productos = await ApiService.GetProductosAsync();
        } catch (Exception ex) {
            errorProductos = ex.Message;
            productos = null;
        } finally {
            cargandoProductos = false;
        }
    }
}
